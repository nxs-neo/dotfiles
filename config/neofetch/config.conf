# See this wiki page for more info:
# https://github.com/dylanaraps/neofetch/wiki/Customizing-Info
print_info() {
    info title
    info underline
    info "$(color 6)OS" distro
    info "$(color 4)PC" model
    info "$(color 6)Kernel" kernel
    info "$(color 2)Shell" shell
    info "$(color 5)DE" de
    info "$(color 3)WM" wm
    info "$(color 1)CPU" cpu
    info "$(color 2)GPU" gpu
    info "$(color 4)RAM" memory
    info "$(color 2)Driver" gpu_driver
    info "$(color 5)Disk" disk
    info underline
    info "$(color 6)Song" song
    [[ "$player" ]] && prin ""$(color 3)"$(color 3)Music Player" "$player" &&  underline
    info cols
}

kernel_shorthand="on"
distro_shorthand="off"
os_arch="off"
package_managers="on"
shell_path="off"
shell_version="on"
refresh_rate="off"
speed_shorthand="on"
cpu_cores="logical"
cpu_brand="off"
gpu_brand="off"
disk_subtitle="none"




# Text Colors

# Default:  "distro"
# Values:   "distro", "num" "num" "num" "num" "num" "num"
# Flag:     --colors
#
# Each number represents a different part of the text in
# this order: "title", "@", "underline", "subtitle", "colon", "info"
#
# Example:
# colors=(distro)      - Text is colored based on Distro colors.
# colors=(4 6 1 8 8 6) - Text is colored in the order above.
## Need to update to GLF colors
colors=(4 6 1 8 8 7)


bold="on"
underline_enabled="on"
underline_char="$(color 0)ðŸ­¹"
separator="ðŸ®‡"


# Color Blocks

# Color block range
# The range of colors to print.
#
# Default:  "0", "15"
# Values:   "num"
# Flag:     --block_range
#
# Example:
#
# Display colors 0-7 in the blocks.  (8 colors)
# neofetch --block_range 0 7
#
# Display colors 0-15 in the blocks. (16 colors)
# neofetch --block_range 0 15
block_range=(0 7)

# Toggle color blocks
#
# Default:  "on"
# Values:   "on", "off"
# Flag:     --color_blocks
color_blocks="on"

# Color block width in spaces
#
# Default:  "3"
# Values:   "num"
# Flag:     --block_width
block_width=4

# Color block height in lines
#
# Default:  "1"
# Values:   "num"
# Flag:     --block_height
block_height=2



# Backend Settings

# Image backend.
#
# Default:  "ascii"
# Values:   "ascii", "caca", "chafa", "jp2a", "iterm2", "off",
#           "termpix", "pixterm", "tycat", "w3m", "kitty", "ueberzug"
# Flag:     --backend
image_backend="ascii"

# Image Source
#
# Which image or ascii file to display.
#
# Default:  "auto"
# Values:   "auto", "ascii", "wallpaper", "/path/to/img", "/path/to/ascii", "/path/to/dir/"
#           "command output (neofetch --ascii "$(fortune | cowsay -W 30)")"
# Flag:     --source
#
# NOTE: "auto" will pick the best image source for whatever image backend is used.
#       In ascii mode, distro ascii art will be used and in an image mode, your
#       wallpaper will be used.
#image_source="~/.config/neofetch/GLF.png"
#image_source=~/.config/neofetch/GLF.png
image_source="auto"


# Ascii Options

# Ascii distro
# Which distro"s ascii art to display.
#
# Default: "auto"
# Values:  "auto", "distro_name"
# Flag:    --ascii_distro
#
# NOTE: Arch and Ubuntu have "old" logo variants.
#       Change this to "arch_old" or "ubuntu_old" to use the old logos.
# NOTE: Ubuntu has flavor variants.
#       Change this to "Lubuntu", "Xubuntu", "Ubuntu-GNOME" or "Ubuntu-Budgie" to use the flavors.
# NOTE: Arch, Crux and Gentoo have a smaller logo variant.
#       Change this to "arch_small", "crux_small" or "gentoo_small" to use the small logos.
ascii_distro="auto"

# Ascii Colors
#
# Default:  "distro"
# Values:   "distro", "num" "num" "num" "num" "num" "num"
# Flag:     --ascii_colors
#
# Example:
# ascii_colors=(distro)      - Ascii is colored based on Distro colors.
# ascii_colors=(4 6 1 8 8 6) - Ascii is colored using these colors.
ascii_colors=()

# Bold ascii logo
# Whether or not to bold the ascii logo.
#
# Default: "on"
# Values:  "on", "off"
# Flag:    --ascii_bold
ascii_bold="on"


# Image Options

# Image loop
# Setting this to on will make neofetch redraw the image constantly until
# Ctrl+C is pressed. This fixes display issues in some terminal emulators.
#
# Default:  "off"
# Values:   "on", "off"
# Flag:     --loop
image_loop="off"

# Thumbnail directory
#
# Default: "~/.cache/thumbnails/neofetch"
# Values:  "dir"
thumbnail_dir="${XDG_CACHE_HOME:-${HOME}/.cache}/thumbnails/neofetch"

# Crop mode
#
# Default:  "normal"
# Values:   "normal", "fit", "fill"
# Flag:     --crop_mode
#
# See this wiki page to learn about the fit and fill options.
# https://github.com/dylanaraps/neofetch/wiki/What-is-Waifu-Crop%3F
crop_mode="fit"

# Crop offset
# Note: Only affects "normal" crop mode.
#
# Default:  "center"
# Values:   "northwest", "north", "northeast", "west", "center"
#           "east", "southwest", "south", "southeast"
# Flag:     --crop_offset
crop_offset="center"

# Image size
# The image is half the terminal width by default.
#
# Default: "auto"
# Values:  "auto", "00px", "00%", "none"
# Flags:   --image_size
#          --size
image_size="auto"

# Gap between image and text
gap=4

# Image offsets
# Only works with the w3m backend.
yoffset=0
xoffset=0

# Image background color
# Only works with the w3m backend.
#
# Default: "
# Values:  "color", "blue"
# Flag:    --bg_color
background_color=


# Misc Options

# Stdout mode
# Turn off all colors and disables image backend (ASCII/Image).
# Useful for piping into another command.
# Default: "off"
# Values: "on", "off"
stdout="off"


# Progress Bars


# Bar characters
#
# Default:  '-', '='
# Values:   'string', 'string'
# Flag:     --bar_char
#
# Example:
# neofetch --bar_char 'elapsed' 'total'
# neofetch --bar_char '-' '='
bar_char_elapsed="ðŸ¬‹"
bar_char_total="ðŸ¬‹"

# Toggle Bar border
#
# Default:  'on'
# Values:   'on', 'off'
# Flag:     --bar_border
bar_border="off"

# Progress bar length in spaces
# Number of chars long to make the progress bars.
#
# Default:  '15'
# Values:   'num'
# Flag:     --bar_length
bar_length=10

# Progress bar colors
# When set to distro, uses your distro's logo colors.
#
# Default:  'distro', 'distro'
# Values:   'distro', 'num'
# Flag:     --bar_colors
#
# Example:
# neofetch --bar_colors 3 4
# neofetch --bar_colors distro 5
bar_color_elapsed="3"
bar_color_total="4"


# Info display
# Display a bar with the info.
#
# Default: 'off'
# Values:  'bar', 'infobar', 'barinfo', 'off'
# Flags:   --cpu_display
#          --memory_display
#          --battery_display
#          --disk_display
#
# Example:
# bar:     '[---=======]'
# infobar: 'info [---=======]'
# barinfo: '[---=======] info'
# off:     'info'
cpu_display="off"
memory_display="infobar"
battery_display="infobar"
disk_display="infobar"